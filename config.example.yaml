receivers:
  dronereceiver:
    collection_interval: 10s
    drone:
      token: <DRONE_TOKEN>
      host: http://localhost:8080
      database:
        host: localhost
        db: drone
        username: postgres
        password: postgres
    webhook:
      endpoint: /drone/webhook
      port: 3333
      secret: bea26a2221fd8090ea38720fc445eca6
    repos:
      grafana/grafana:
        - main
      grafana/gracie:
        - main
      grafana/grafana-ci-otel-collector:
        - main

processors:

exporters:
  logging:
    verbosity: detailed
  otlp:
    endpoint: localhost:4317
    tls:
      insecure: true
  prometheusremotewrite:
    endpoint: 'http://localhost:9090/api/v1/write'
    namespace: ci
    resource_to_telemetry_conversion:
      enabled: true
  loki:
    endpoint: http://localhost:3100/loki/api/v1/push

service:
  pipelines:
    traces:
      receivers: [dronereceiver]
      processors: []
      exporters: [otlp, logging]
    logs:
      receivers: [dronereceiver]
      processors: []
      exporters: [loki, logging]
    metrics:
      receivers: [dronereceiver]
      processors: []
      exporters: [prometheusremotewrite, logging]

  telemetry:
    logs:
      level: debug
