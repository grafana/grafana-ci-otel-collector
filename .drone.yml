---
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: pr
steps:
- commands:
  - make tidy-all
  - git diff -s --exit-code || (echo "Packages are out of date. Run make tidy-all
    and commit the changes" && git --no-pager diff && exit 1)
  image: golang:1.22.2
  name: check-packages
- commands:
  - make install-tools
  depends_on:
  - check-packages
  image: golang:1.22.2
  name: install-tools
- commands:
  - make generate
  - git diff -s --exit-code || (echo "Generated code is out of date. Run make generate
    and commit the changes" && git --no-pager diff && exit 1)
  depends_on:
  - install-tools
  image: golang:1.22.2
  name: check-codegen
- commands:
  - make crosslink
  - git diff -s --exit-code || (echo "Replace statements not updated. Run make crosslink
    and commit the changes" && git --no-pager diff && exit 1)
  depends_on:
  - install-tools
  image: golang:1.22.2
  name: check-crosslink
- commands:
  - make lint-all
  depends_on:
  - install-tools
  image: golang:1.22.2
  name: lint
- commands:
  - make test-all
  depends_on:
  - install-tools
  image: golang:1.22.2
  name: test
- commands:
  - docker build .
  depends_on:
  - test
  image: docker:dind
  name: build
  volumes:
  - name: dockerDind
    path: /var/run
  - name: docker
    path: /var/run/docker.sock
trigger:
  event:
  - pull_request
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: main
steps:
- commands:
  - make tidy-all
  - git diff -s --exit-code || (echo "Packages are out of date. Run make tidy-all
    and commit the changes" && git --no-pager diff && exit 1)
  image: golang:1.22.2
  name: check-packages
- commands:
  - make install-tools
  depends_on:
  - check-packages
  image: golang:1.22.2
  name: install-tools
- commands:
  - make generate
  - git diff -s --exit-code || (echo "Generated code is out of date. Run make generate
    and commit the changes" && git --no-pager diff && exit 1)
  depends_on:
  - install-tools
  image: golang:1.22.2
  name: check-codegen
- commands:
  - make crosslink
  - git diff -s --exit-code || (echo "Replace statements not updated. Run make crosslink
    and commit the changes" && git --no-pager diff && exit 1)
  depends_on:
  - install-tools
  image: golang:1.22.2
  name: check-crosslink
- commands:
  - make lint-all
  depends_on:
  - install-tools
  image: golang:1.22.2
  name: lint
- commands:
  - make test-all
  depends_on:
  - install-tools
  image: golang:1.22.2
  name: test
- commands:
  - docker build --tag us.gcr.io/kubernetes-dev/grafana-ci-otel-collector:${DRONE_COMMIT}
    .
  depends_on:
  - test
  image: docker:dind
  name: build
  volumes:
  - name: dockerDind
    path: /var/run
  - name: docker
    path: /var/run/docker.sock
- commands:
  - echo $${GCR_CREDENTIALS} | docker login -u _json_key --password-stdin https://us.gcr.io
  - docker push us.gcr.io/kubernetes-dev/grafana-ci-otel-collector:${DRONE_COMMIT}
  depends_on:
  - build
  environment:
    GCR_CREDENTIALS:
      from_secret: gcr_credentials
  image: docker:dind
  name: publish-to-gcr
  volumes:
  - name: dockerDind
    path: /var/run
  - name: docker
    path: /var/run/docker.sock
- depends_on:
  - publish-to-gcr
  image: us.gcr.io/kubernetes-dev/drone/plugins/updater
  name: update-deployment-tools-dev
  settings:
    config_json: |
      {
        "destination_branch": "master",
        "pull_request_branch_prefix": "auto-merge/grafana-ci-otel-collector/",
        "pull_request_enabled": true,
        "pull_request_team_reviewers": [],
        "pull_request_title": "Dev: Update grafana-ci-otel-collector",
        "repo_name": "deployment_tools",
        "update_jsonnet_attribute_configs": [
          {
            "file_path": "ksonnet/environments/grafana-ci-otel-collector/image-dev.libsonnet",
            "jsonnet_key": "dev",
            "jsonnet_value": "us.gcr.io/kubernetes-dev/grafana-ci-otel-collector:${DRONE_COMMIT}"
          }
        ]
      }
    github_app_id:
      from_secret: gh_app_id
    github_app_installation_id:
      from_secret: gh_app_installation_id
    github_app_private_key:
      from_secret: gh_app_private_key
- depends_on:
  - publish-to-gcr
  image: us.gcr.io/kubernetes-dev/drone/plugins/updater
  name: update-deployment-tools-ops
  settings:
    config_json: |
      {
        "destination_branch": "master",
        "pull_request_branch_prefix": "grafana-ci-otel-collector/",
        "pull_request_enabled": true,
        "pull_request_team_reviewers": [],
        "pull_request_title": "Ops: Update grafana-ci-otel-collector ",
        "repo_name": "deployment_tools",
        "update_jsonnet_attribute_configs": [
          {
            "file_path": "ksonnet/environments/grafana-ci-otel-collector/image-ops.libsonnet",
            "jsonnet_key": "ops",
            "jsonnet_value": "us.gcr.io/kubernetes-dev/grafana-ci-otel-collector:${DRONE_COMMIT}"
          }
        ]
      }
    github_app_id:
      from_secret: gh_app_id
    github_app_installation_id:
      from_secret: gh_app_installation_id
    github_app_private_key:
      from_secret: gh_app_private_key
trigger:
  branch: main
  event:
  - push
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
- name: dockerDind
  temp: {}
---
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: hackathon-theodora
steps:
- commands:
  - make build
  image: golang:1.22.2
  name: build
- commands:
  - go test ./pkg/dronereceiver/...
  - go test ./pkg/traceutils/...
  depends_on:
  - build
  image: golang:1.22.2
  name: test
- commands:
  - docker build --tag us.gcr.io/kubernetes-dev/grafana-ci-otel-collector-hackathon-theodora:${DRONE_COMMIT}
    .
  image: docker:dind
  name: build-docker-image
  volumes:
  - name: dockerDind
    path: /var/run
  - name: docker
    path: /var/run/docker.sock
- commands:
  - echo $${GCR_CREDENTIALS} | docker login -u _json_key --password-stdin https://us.gcr.io
  - docker push us.gcr.io/kubernetes-dev/grafana-ci-otel-collector-hackathon-theodora:${DRONE_COMMIT}
  depends_on:
  - build-docker-image
  environment:
    GCR_CREDENTIALS:
      from_secret: gcr_credentials
  image: docker:dind
  name: publish-to-gcr
  volumes:
  - name: dockerDind
    path: /var/run
  - name: docker
    path: /var/run/docker.sock
- depends_on:
  - publish-to-gcr
  image: us.gcr.io/kubernetes-dev/drone/plugins/updater
  name: update-deployment-tools-dev
  settings:
    config_json: |
      {
        "destination_branch": "master",
        "pull_request_branch_prefix": "auto-merge/grafana-ci-otel-collector/",
        "pull_request_enabled": true,
        "pull_request_team_reviewers": [],
        "pull_request_title": "Dev: Update grafana-ci-otel-collector-hackathon-theodora",
        "repo_name": "deployment_tools",
        "update_jsonnet_attribute_configs": [
          {
            "file_path": "ksonnet/environments/grafana-ci-otel-collector/image-dev.libsonnet",
            "jsonnet_key": "hackathon_theodora",
            "jsonnet_value": "us.gcr.io/kubernetes-dev/grafana-ci-otel-collector-hackathon-theodora:${DRONE_COMMIT}"
          }
        ]
      }
    github_app_id:
      from_secret: gh_app_id
    github_app_installation_id:
      from_secret: gh_app_installation_id
    github_app_private_key:
      from_secret: gh_app_private_key
trigger:
  branch: hackathon-theodora
  event:
  - push
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
- name: dockerDind
  temp: {}
---
kind: pipeline
name: verify-gen-pipeline
steps:
- commands:
  - make metadata
  - 'if [ -n "$(git status --porcelain)" ]; then echo "ERROR: Please run make metadata
    and commit your changes." && git diff --exit-code; fi'
  image: golang:1.22.2
  name: verify-gen
trigger:
  event:
  - pull_request
  paths:
    include:
    - pkg/dronereceiver/metadata.yaml
type: docker
---
get:
  name: service-account
  path: infra/data/ci/gcr-admin
kind: secret
name: gcr_credentials
---
get:
  name: app-id
  path: infra/data/ci/grafana-release-eng/grafana-delivery-bot
kind: secret
name: gh_app_id
---
get:
  name: app-installation-id
  path: infra/data/ci/grafana-release-eng/grafana-delivery-bot
kind: secret
name: gh_app_installation_id
---
get:
  name: app-private-key
  path: infra/data/ci/grafana-release-eng/grafana-delivery-bot
kind: secret
name: gh_app_private_key
---
get:
  name: .dockerconfigjson
  path: secret/data/common/gcr
kind: secret
name: dockerconfigjson
---
kind: signature
hmac: 52c068b869562195ab4b50e54cc551fe3d20466f2f464ccb2976f37526b53c15

...
