name: Build and Test

concurrency:
  # For pushes, this lets concurrent runs happen, so each push gets a result.
  # But for other events (e.g. PRs), we can cancel the previous runs.
  group: ${{ github.workflow }}-${{ github.event_name == 'push' && github.sha || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [main]

  push:
    branches: [main]

permissions:
  contents: read
  id-token: write

jobs:
  install-tools:
    name: Install Tools
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod
          cache: false

      - name: Cache Go and Tools
        id: cache
        timeout-minutes: 5
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
            ./.tools
          key: go-cache-${{ hashFiles('**/go.sum') }}

      - name: Make install-tools
        if: steps.cache.outputs.cache-hit != 'true'
        run: make install-tools

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: install-tools
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod
          cache: false

      - name: Cache Go
        timeout-minutes: 5
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
            ./.tools
          key: go-cache-${{ hashFiles('**/go.sum') }}
          fail-on-cache-miss: true

      - name: Check packages are up-to-date
        run: |
          make tidy-all
          git diff -s --exit-code || (echo 'Packages are out of date. Run make tidy-all and commit the changes' && git --no-pager diff && exit 1)

      - name: Check Code Generation
        run: |
          make generate
          git diff -s --exit-code || (echo 'Generated code is out of date. Run make generate and commit the changes' && git --no-pager diff && exit 1)

      - name: Check crosslink run
        run: |
          make crosslink
          git diff -s --exit-code || (echo 'Replace statements not updated. Run make crosslink and commit the changes' && git --no-pager diff && exit 1)

      - name: Check formatting
        run: |
          make fmt-all
          git diff -s --exit-code || (echo 'Code is not formatted. Run make fmt-all and commit the changes' && git --no-pager diff && exit 1)

      - name: Make lint-all
        run: make lint-all

  build:
    name: Build & Push
    runs-on: ubuntu-latest
    needs: install-tools
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod
          cache: false

      - name: Cache Go
        timeout-minutes: 5
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
            ./.tools
          key: go-cache-${{ hashFiles('**/go.sum') }}
          fail-on-cache-miss: true

      - name: Make build
        run: make build

      - name: Push to GAR
        uses: grafana/shared-workflows/actions/push-to-gar-docker@main
        with:
          # Only push to GAR on main branch pushes
          push: ${{ github.event_name == 'push' && github.ref_name == 'main' && 'true' || 'false' }}
          tags: |-
            ${{ github.sha }}
            "latest"
          context: "." # e.g. "." - where the Dockerfile is
          image_name: "grafana-ci-otel-collector" # name of the image to be published, required
          environment: "dev"

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: install-tools
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod
          cache: false

      - name: Cache Go
        timeout-minutes: 5
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
            ~/.cache/go-build
            ./.tools
          key: go-cache-${{ hashFiles('**/go.sum') }}
          fail-on-cache-miss: true

      - name: Make test-all
        run: make test-all
